import "oaidl.idl";
import "ocidl.idl";

enum enum_file_type
{
  FT_STATUS_ERROR,
  FT_FILE_NOT_FOUND,
  FT_REGULAR_FILE,
  FT_DIRECTORY_FILE,
  FT_SYMLINK_FILE,
  FT_BLOCK_FILE,
  FT_CHARACTER_FILE,
  FT_FIFO_FILE,
  FT_SOCKET_FILE,
  FT_REPARSE_FILE,
  FT_TYPE_UNKNOWN,
  FT__DETAIL_DIRECTORY_SYMLINK,
  FT_DRIVE_NO_ROOT_DIR,
  FT_DRIVE_REMOVABLE,
  FT_DRIVE_FIXED,
  FT_DRIVE_REMOTE,
  FT_DRIVE_CDROM,
  FT_DRIVE_RAMDISK,
  FT_UNKNOWN,
};

enum enum_permissions
{
  no_perms = 0,       // file_not_found is no_perms rather than perms_not_known

  // POSIX equivalent macros given in comments.
  // Values are from POSIX and are given in octal per the POSIX standard.

  // permission bits

  owner_read = 0400,  // S_IRUSR, Read permission, owner
  owner_write = 0200, // S_IWUSR, Write permission, owner
  owner_exe = 0100,   // S_IXUSR, Execute/search permission, owner
  owner_all = 0700,   // S_IRWXU, Read, write, execute/search by owner

  group_read = 040,   // S_IRGRP, Read permission, group
  group_write = 020,  // S_IWGRP, Write permission, group
  group_exe = 010,    // S_IXGRP, Execute/search permission, group
  group_all = 070,    // S_IRWXG, Read, write, execute/search by group

  others_read = 04,   // S_IROTH, Read permission, others
  others_write = 02,  // S_IWOTH, Write permission, others
  others_exe = 01,    // S_IXOTH, Execute/search permission, others
  others_all = 07,    // S_IRWXO, Read, write, execute/search by others

  all_all = 0777,     // owner_all|group_all|others_all

  // other POSIX bits

  set_uid_on_exe = 04000, // S_ISUID, Set-user-ID on execution
  set_gid_on_exe = 02000, // S_ISGID, Set-group-ID on execution
  sticky_bit     = 01000, // S_ISVTX,
  // (POSIX XSI) On directories, restricted deletion flag 
  // (V7) 'sticky bit': save swapped text even after use 
  // (SunOS) On non-directories: don't cache this file
  // (SVID-v4.2) On directories: restricted deletion flag
  // Also see http://en.wikipedia.org/wiki/Sticky_bit

  perms_mask = 07777,     // all_all|set_uid_on_exe|set_gid_on_exe|sticky_bit

  perms_not_known = 0xFFFF, // present when directory_entry cache not loaded

  // options for permissions() function

  add_perms = 0x1000,     // adds the given permission bits to the current bits
  remove_perms = 0x2000,  // removes the given permission bits from the current bits;
  // choose add_perms or remove_perms, not both; if neither add_perms
  // nor remove_perms is given, replace the current bits with
  // the given bits.

  symlink_perms = 0x4000  // on POSIX, don't resolve symlinks; implied on Windows
};

